From dda049aaab4bbe2fa24174b77a991b87438b6c94 Mon Sep 17 00:00:00 2001
From: "Andrew C. Smith" <acsmith@gumstix.com>
Date: Tue, 8 Aug 2017 12:57:05 -0400
Subject: [PATCH] Changes made to support the Gumstix NXP SCM board.

---
 .../bindings/sound/fsl,imx-audio-tlv320aic3x.txt   |  27 ++
 arch/arm/boot/dts/imx6dqscm-1gb-gumstix.dts        | 790 ++++++++++++++++++++++++++++++++
 sound/soc/fsl/Kconfig                              |  13 +
 sound/soc/fsl/Makefile                             |   2 +
 sound/soc/fsl/imx-tlv320aic3x.c                    | 186 ++++++++++++
 5 files changed, 539 insertions(+)
 create mode 100644 Documentation/devicetree/bindings/sound/fsl,imx-audio-tlv320aic3x.txt
 create mode 100644 arch/arm/boot/dts/imx6dqscm-1gb-gumstix.dts
 create mode 100644 sound/soc/fsl/imx-tlv320aic3x.c

diff --git a/Documentation/devicetree/bindings/sound/fsl,imx-audio-tlv320aic3x.txt b/Documentation/devicetree/bindings/sound/fsl,imx-audio-tlv320aic3x.txt
new file mode 100644
index 0000000..9e6c4443
--- /dev/null
+++ b/Documentation/devicetree/bindings/sound/fsl,imx-audio-tlv320aic3x.txt
@@ -0,0 +1,27 @@
+Audio complex for i.MX6 boards with tlv320aic3x audio codecs.
+
+Required properties:
+- compatible : "fsl,imx-audio-tlv320aic3x"
+- model : The user-visible name of this sound complex.
+- ssi-controller : The phandle of the SSI controller.
+- mux-int-port : The internal port of the i.MX audio muxer (AUDMUX).
+- mux-ext-port : The external port of the i.MX audio muxer.
+
+Note: The AUDMUX port numbering should start at 1, which is consistent with
+hardware manual.
+
+Example:
+
+sound {
+	compatible = "fsl,imx-audio-tlv320aic3x";
+	model = "imx6q-phyflex-tlv320aic3007";
+	ssi-controller = <&ssi2>;
+	audio-codec = <&codec>;
+	audio-routing =
+		"Line Out", "LLOUT",
+		"Line Out", "RLOUT",
+		"Headphone Jack", "HPLOUT",
+		"Headphone Jack", "HPROUT";
+	mux-int-port = <2>;
+	mux-ext-port = <5>;
+};
diff --git a/arch/arm/boot/dts/imx6dqscm-1gb-gumstix.dts b/arch/arm/boot/dts/imx6dqscm-1gb-gumstix.dts
new file mode 100644
index 0000000..dd8fb6a
--- /dev/null
+++ b/arch/arm/boot/dts/imx6dqscm-1gb-gumstix.dts
@@ -0,0 +1,790 @@
+/*
+* Copyright (C) 2017 Gumstix, Inc.  All Rights Reserved - https://www.gumstix.com/
+* Product of the Geppetto Device Tree Service
+*
+*/
+
+/dts-v1/;
+
+#include <dt-bindings/input/input.h>
+#include <dt-bindings/interrupt-controller/irq.h>
+#include <dt-bindings/gpio/gpio.h>
+
+#define PIN_INPUT_PULLUP 0x1b0b0
+#define PIN_INPUT_PULLDOWN 0x130b0
+#define PIN_OUTPUT 0x80000000
+#define PIN_INPUT 0x170f9
+#define PIN_OUTPUT_PULLUP 0x4001b8b1
+#define PIN_OUTPUT_PULLDOWN 0x10
+
+#include "imx6q.dtsi"
+
+/ {
+    model = "iMX6dql Gumstix Overo on Geppetto - NXP SCM Dev Board";
+    compatible = "gumstix,imx6-nxp-scm-dev-board", "gumstix,imx_scm", "fsl,imx6q";
+
+    sound-hdmi {
+        compatible = "fsl,imx6q-audio-hdmi", "fsl,imx-audio-hdmi";
+        model = "imx-audio-hdmi";
+        hdmi-controller = <&hdmi_audio>;
+    };
+
+    aliases {
+        mxcfb0 = &mxcfb1;
+        mxcfb1 = &mxcfb2;
+        mxcfb2 = &mxcfb3;
+        mxcfb3 = &mxcfb4;
+    };
+
+    soc {
+        busfreq {
+            fsl,max_ddr_freq = <400000000>;
+            status = "okay";
+        };
+    };
+
+    chosen {
+        stdout-path = &uart1;
+    };
+
+    memory: memory {
+        linux,usable-memory = <0x10000000 0x20000000
+                   0x80000000 0x20000000>;
+        reg = <0x10000000 0x40000000>;
+    };
+
+    regulators {
+        compatible = "simple-bus";
+        #address-cells = <1>;
+        #size-cells = <0>;
+
+        reg_usb_otg_vbus: regulator@0 {
+            compatible = "regulator-fixed";
+            reg = <0>;
+            regulator-name = "usb_otg_vbus";
+            regulator-min-microvolt = <5000000>;
+            regulator-max-microvolt = <5000000>;
+            gpio = <&gpio4 15 0>;
+            enable-active-high;
+        };
+
+        reg_usb_h1_vbus: regulator@1 {
+            status = "okay";
+            compatible = "regulator-fixed";
+            reg = <1>;
+            regulator-name = "usb_h1_vbus";
+            regulator-min-microvolt = <5000000>;
+            regulator-max-microvolt = <5000000>;
+            gpio = <&gpio3 31 0>;
+            enable-active-high;
+        };
+    };
+
+    mxcfb1: fb@0 {
+        compatible = "fsl,mxc_sdc_fb";
+        disp_dev = "hdmi";
+        interface_pix_fmt = "RGB24";
+        mode_str ="1920x1080M@60";
+        default_bpp = <24>;
+        int_clk = <0>;
+        late_init = <0>;
+        status = "disabled";
+    };
+
+    mxcfb2: fb@1 {
+        compatible = "fsl,mxc_sdc_fb";
+        disp_dev = "hdmi";
+        interface_pix_fmt = "RGB24";
+        mode_str ="1920x1080M@60";
+        default_bpp = <24>;
+        int_clk = <0>;
+        late_init = <0>;
+        status = "disabled";
+    };
+
+    mxcfb3: fb@2 {
+        compatible = "fsl,mxc_sdc_fb";
+        disp_dev = "lcd";
+        interface_pix_fmt = "RGB565";
+        mode_str ="CLAA-WVGA";
+        default_bpp = <16>;
+        int_clk = <0>;
+        late_init = <0>;
+        status = "disabled";
+    };
+
+    mxcfb4: fb@3 {
+        compatible = "fsl,mxc_sdc_fb";
+        disp_dev = "ldb";
+        interface_pix_fmt = "RGB666";
+        default_bpp = <16>;
+        int_clk = <0>;
+        late_init = <0>;
+        status = "disabled";
+    };
+
+    sound: sound_iface {
+        status = "okay";
+        mux-ext-port = <4>;
+        cpu-dai = <&ssi2>;
+        model = "gumstix-imx-tlv320aic3106";
+        ssi-controller = <&ssi2>;
+        audio-routing = "Headphone Jack",
+            "HPLOUT",
+            "Headphone Jack",
+            "HPROUT",
+            "LINE1L",
+            "Line In",
+            "LINE1R",
+            "Line In",
+            "Microphone",
+            "MIC3L",
+            "Microphone",
+            "MIC3R";
+        compatible = "fsl,imx-audio-tlv320aic3x";
+        audio-codec = <&audio_codec>;
+        mux-int-port = <2>;
+        clock-frequency = <12000000>;
+    };
+
+    leds {
+        status = "okay";
+        pinctrl-names = "default";
+        pinctrl-0 = <&leds_default>;
+        trigger = "none";
+        type = "led";
+        default-state = "off";
+        compatible = "gpio-leds";
+
+        led_0 {
+            status = "okay";
+            trigger = "none";
+            type = "led";
+            label = "led_0";
+            default-state = "off";
+            gpios = <&gpio4 28 GPIO_ACTIVE_HIGH>;
+        };
+    };
+
+    mmc2_pwrseq: mmc2_pwrseq_root {
+        status = "okay";
+        reset-gpios = <&gpio4 20 GPIO_ACTIVE_LOW>,
+            <&gpio4 17 GPIO_ACTIVE_LOW>;
+        compatible = "mmc-pwrseq-simple";
+    };
+};
+
+&usbphy1 {
+    tx-d-cal = <0x5>;
+};
+
+&usbphy2 {
+    tx-d-cal = <0x5>;
+};
+
+&cpu0 {
+    arm-supply = <&reg_arm>;
+    soc-supply = <&reg_soc>;
+};
+
+&clks {
+    fsl,ldb-di0-parent = <&clks IMX6QDL_CLK_PLL2_PFD0_352M>;
+    fsl,ldb-di1-parent = <&clks IMX6QDL_CLK_PLL2_PFD0_352M>;
+};
+
+&snvs_poweroff {
+    status = "okay";
+};
+
+&ssi2 {
+    status = "okay";
+};
+
+&ecspi1 {
+    fsl,spi-num-chipselects = <1>;
+    cs-gpios = <&gpio2 30 0>;
+    pinctrl-names = "default";
+    pinctrl-0 = <&pinctrl_ecspi1>;
+    status = "okay";
+
+    flash: m25p80@0 {
+        #address-cells = <1>;
+        #size-cells = <1>;
+        compatible = "micron,n25q128a13";
+        spi-max-frequency = <20000000>;
+        reg = <0>;
+    };
+};
+
+&i2c2 {
+    clock-frequency = <100000>;
+    pinctrl-names = "default";
+    pinctrl-0 = <&pinctrl_i2c2>;
+    status = "okay";
+
+    pmic: pfuze100@08 {
+        compatible = "fsl,pfuze100";
+        reg = <0x08>;
+
+        regulators {
+            sw1a_reg: sw1ab {
+                regulator-min-microvolt = <300000>;
+                regulator-max-microvolt = <1875000>;
+                regulator-boot-on;
+                regulator-always-on;
+                regulator-ramp-delay = <6250>;
+            };
+
+            sw1c_reg: sw1c {
+                regulator-min-microvolt = <300000>;
+                regulator-max-microvolt = <1875000>;
+                regulator-boot-on;
+                regulator-always-on;
+                regulator-ramp-delay = <6250>;
+            };
+
+            sw2_reg: sw2 {
+                regulator-min-microvolt = <800000>;
+                regulator-max-microvolt = <3300000>;
+                regulator-boot-on;
+                regulator-always-on;
+            };
+
+            sw3a_reg: sw3a {
+                regulator-min-microvolt = <400000>;
+                regulator-max-microvolt = <1200000>;
+                regulator-boot-on;
+                regulator-always-on;
+            };
+
+            sw3b_reg: sw3b {
+                regulator-min-microvolt = <400000>;
+                regulator-max-microvolt = <1200000>;
+                regulator-boot-on;
+                regulator-always-on;
+            };
+
+            sw4_reg: sw4 {
+                regulator-min-microvolt = <800000>;
+                regulator-max-microvolt = <1800000>;
+                regulator-boot-on;
+                regulator-always-on;
+            };
+
+            swbst_reg: swbst {
+                regulator-min-microvolt = <5000000>;
+                regulator-max-microvolt = <5150000>;
+                regulator-boot-on;
+                regulator-always-on;
+            };
+
+            snvs_reg: vsnvs {
+                regulator-min-microvolt = <3000000>;
+                regulator-max-microvolt = <3000000>;
+                regulator-boot-on;
+                regulator-always-on;
+            };
+
+            vref_reg: vrefddr {
+                regulator-boot-on;
+                regulator-always-on;
+            };
+
+            vgen1_reg: vgen1 {
+                regulator-min-microvolt = <800000>;
+                regulator-max-microvolt = <1550000>;
+                regulator-always-on;
+            };
+
+            vgen2_reg: vgen2 {
+                regulator-min-microvolt = <1500000>;
+                regulator-max-microvolt = <1500000>;
+                regulator-always-on;
+            };
+
+            vgen3_reg: vgen3 {
+                regulator-min-microvolt = <3300000>;
+                regulator-max-microvolt = <3300000>;
+                regulator-always-on;
+            };
+
+            vgen4_reg: vgen4 {
+                regulator-min-microvolt = <1800000>;
+                regulator-max-microvolt = <2500000>;
+                regulator-always-on;
+            };
+
+            vgen5_reg: vgen5 {
+                regulator-min-microvolt = <1800000>;
+                regulator-max-microvolt = <2500000>;
+                regulator-always-on;
+            };
+
+            vgen6_reg: vgen6 {
+                regulator-min-microvolt = <1800000>;
+                regulator-max-microvolt = <3150000>;
+                regulator-always-on;
+            };
+        };
+    };
+};
+
+&usbh1 {
+    vbus-supply = <&reg_usb_h1_vbus>;
+    status = "disabled";
+    disable-over-current;
+    pinctrl-names = "default";
+    pinctrl-0 = <&pinctrl_usbh1>;
+};
+
+&usbotg {
+    vbus-supply = <&reg_usb_otg_vbus>;
+    pinctrl-names = "default";
+    pinctrl-0 = <&pinctrl_usbotg>;
+    disable-over-current;
+    srp-disable;
+    hnp-disable;
+    adp-disable;
+    status = "okay";
+};
+
+&usbh1 {
+    status = "okay";
+};
+
+&usbh2 {
+    status = "okay";
+};
+
+&i2c2 {
+    hdmi: edid@50 {
+        compatible = "fsl,imx6-hdmi-i2c";
+        reg = <0x50>;
+    };
+};
+
+&hdmi_audio {
+    status = "disabled";
+};
+
+&hdmi_core {
+    ipu_id = <0>;
+    disp_id = <0>;
+    status = "okay";
+};
+
+&hdmi_video {
+    fsl,phy_reg_vlev = <0x0294>;
+    fsl,phy_reg_cksymtx = <0x800d>;
+    status = "okay";
+};
+
+&mxcfb1 {
+    status = "okay";
+};
+
+&mxcfb2 {
+    status = "okay";
+};
+
+&ldb {
+    status = "okay";
+
+    lvds-channel@0 {
+        fsl,data-mapping = "spwg";
+        fsl,data-width = <18>;
+        status = "okay";
+        crtc = "ipu2-di0";
+
+        display-timings {
+            native-mode = <&timing0>;
+
+            timing0: hsd100pxn1 {
+                clock-frequency = <65000000>;
+                hactive = <1920>;
+                vactive = <1080>;
+                hback-porch = <220>;
+                hfront-porch = <40>;
+                vback-porch = <21>;
+                vfront-porch = <7>;
+                hsync-len = <60>;
+                vsync-len = <10>;
+            };
+        };
+    };
+
+    lvds-channel@1 {
+        fsl,data-mapping = "spwg";
+        fsl,data-width = <18>;
+        status = "okay";
+        crtc = "ipu2-di1";
+        primary;
+
+        display-timings {
+        native-mode = <&timing0>;
+
+            timing1: hsd100pxn1 {
+                clock-frequency = <65000000>;
+                hactive = <1920>;
+                vactive = <1080>;
+                hback-porch = <220>;
+                hfront-porch = <40>;
+                vback-porch = <21>;
+                vfront-porch = <7>;
+                hsync-len = <60>;
+                vsync-len = <10>;
+            };
+        };
+    };
+};
+
+&iomuxc {
+    imx6qdl-sabresd {
+        pinctrl_hdmi_cec: hdmicecgrp {
+            fsl,pins = <
+                MX6QDL_PAD_KEY_ROW2__HDMI_TX_CEC_LINE 0x108b0
+            >;
+        };
+    };
+};
+
+&ecspi1 {
+    fsl,spi-num-chipselects = <1>;
+    cs-gpios = <&gpio2 30 0>;
+    pinctrl-names = "default";
+    pinctrl-0 = <&pinctrl_ecspi1>;
+    status = "okay";
+
+    flash: m25p80@0 {
+        #address-cells = <1>;
+        #size-cells = <1>;
+        compatible = "micron,n25q128a13";
+        spi-max-frequency = <20000000>;
+        reg = <0>;
+    };
+};
+
+&usdhc2 {
+    pinctrl-names = "default";
+    pinctrl-0 = <&pinctrl_usdhc2>;
+    bus-width = <4>;
+    cd-gpios = <&gpio1 4 GPIO_ACTIVE_LOW>;
+    no-1-8-v;
+    keep-power-in-suspend;
+    enable-sdio-wakeup;
+    status = "okay";
+};
+
+&gpc {
+    /* use ldo-enable, u-boot will check it and configure */
+    fsl,ldo-bypass = <0>;
+    /* watchdog select of reset source */
+    fsl,wdog-reset = <1>;
+};
+
+&wdog1 {
+    status = "okay";
+};
+
+&wdog2 {
+    status = "disabled";
+};
+
+&fec {
+    local-mac-address = [06 CD 8C E9 08 0D];
+};
+
+
+// i2c_buses device
+
+&i2c1 {
+    status = "okay";
+    pinctrl-names = "default";
+    pinctrl-0 = <&i2c1_default>;
+    clock-frequency = <400000>;
+    
+    audio_codec: audio_codec@1b {
+        status = "okay";
+        reg = <27>;
+        compatible = "ti,tlv320aic3106";
+        type = "audio";
+        gpio-reset = <&gpio4 16 GPIO_ACTIVE_LOW>;
+    };
+};
+
+&i2c3 {
+    status = "okay";
+    pinctrl-names = "default";
+    pinctrl-0 = <&i2c3_default>;
+    clock-frequency = <400000>;
+};
+
+// ethernet device
+
+&fec {
+    status = "okay";
+    pinctrl-names = "default";
+    pinctrl-0 = <&fec_default>;
+    phy-reset-gpios = <&gpio1 26 0>;
+    assigned-clocks = <&clks IMX6QDL_CLK_ENET_REF>;
+    type = "ethernet";
+    phy-mode = "rgmii";
+    assigned-clock-rates = <50000000>;
+    fsl,magic-packet;
+};
+
+// imx6-hdmi device
+
+&hdmi_cec {
+    status = "okay";
+    pinctrl-names = "default";
+    pinctrl-0 = <&hdmi_default>;
+    type = "imx6-hdmi";
+};
+
+// uart1 device
+
+&uart1 {
+    status = "okay";
+    pinctrl-names = "default";
+    pinctrl-0 = <&uart1_default>;
+    type = "uart";
+};
+
+// uart5 device
+
+&uart5 {
+    status = "okay";
+    pinctrl-names = "default";
+    pinctrl-0 = <&uart5_default>;
+    type = "sdmmc",
+        "uart";
+    /delete-property/fsl,dte-mode;
+};
+
+// mmc1 device
+
+&usdhc1 {
+    status = "okay";
+    pinctrl-names = "default";
+    pinctrl-0 = <&usdhc1_default>;
+    mc-pwrseq = <&mmc2_pwrseq>;
+    #address-cells = <1>;
+    type = "sdmmc",
+        "uart";
+    #size-cells = <0>;
+    label = "SDIO";
+    keep-power-in-suspend;
+    enable-sdio-wakeup;
+    non-removable;
+    cap-power-off-card;
+    no-1-8-v;
+    
+    wlcore: wlcore@0 {
+        status = "okay";
+        compatible = "ti,wl1835";
+        reg = <2>;
+    
+        interrupt-parent = <&gpio5>;
+        interrupts =<10 IRQ_TYPE_EDGE_RISING>;
+    };
+};
+
+// usb device
+
+
+// uart3 device
+
+&uart3 {
+    status = "okay";
+    pinctrl-names = "default";
+    pinctrl-0 = <&uart3_default>;
+    type = "uart";
+};
+
+// spi_buses device
+
+&ecspi3 {
+    status = "okay";
+    pinctrl-names = "default";
+    pinctrl-0 = <&ecspi3_default>;
+    
+    spidev: spidev@0 {
+        status = "okay";
+        compatible = "linux,spidev";
+        type = "spi";
+        reg = <0>;
+    
+        interrupt-parent = <&gpio4>;
+        interrupts =<19 0>;
+    };
+};
+
+// asp device
+
+&audmux {
+    status = "okay";
+    pinctrl-names = "default";
+    pinctrl-0 = <&audio_default>;
+    type = "audio";
+};
+
+
+&iomuxc {
+    imx6qdl-geppetto {
+        pinctrl_usbotg: usbotggrp {
+            fsl,pins = <
+                MX6QDL_PAD_GPIO_1__USB_OTG_ID        0x17059
+            >;
+        };
+
+        pinctrl_ecspi1: ecspi1grp {
+            fsl,pins = <
+                MX6QDL_PAD_EIM_D17__ECSPI1_MISO 0x100b1
+                MX6QDL_PAD_EIM_D18__ECSPI1_MOSI 0x100b1
+                MX6QDL_PAD_EIM_D16__ECSPI1_SCLK 0x100b1
+            >;
+        };
+
+        pinctrl_i2c2: i2c2grp {
+            fsl,pins = <
+                MX6QDL_PAD_KEY_COL3__I2C2_SCL    0x4001b8b1
+                MX6QDL_PAD_KEY_ROW3__I2C2_SDA    0x4001b8b1
+             >;
+        };
+
+        pinctrl_usbh1: usbh1grp {
+            fsl,pins = <
+                MX6QDL_PAD_EIM_D31__GPIO3_IO31        0x1b0b1
+                MX6QDL_PAD_EIM_D30__USB_H1_OC        0x1b0b0
+            >;
+        };
+
+        pinctrl_usdhc2: usdhc2grp {
+            fsl,pins = <
+                MX6QDL_PAD_SD2_CMD__SD2_CMD        0x17059
+                MX6QDL_PAD_SD2_CLK__SD2_CLK        0x10059
+                MX6QDL_PAD_SD2_DAT0__SD2_DATA0        0x17059
+                MX6QDL_PAD_SD2_DAT1__SD2_DATA1        0x17059
+                MX6QDL_PAD_SD2_DAT2__SD2_DATA2        0x17059
+                MX6QDL_PAD_SD2_DAT3__SD2_DATA3        0x17059
+            >;
+        };
+    };
+};
+
+
+
+&iomuxc {
+    geppetto {
+        fec_default: fecgrp {
+            fsl,pins = <
+                MX6QDL_PAD_ENET_TXD1__GPIO1_IO29 PIN_INPUT /* enet_txd1.gpio1_io29 */
+                MX6QDL_PAD_ENET_RXD1__GPIO1_IO26 PIN_INPUT /* enet_rxd1.gpio1_io26 */
+                MX6QDL_PAD_ENET_REF_CLK__ENET_TX_CLK PIN_INPUT_PULLUP /* enet_ref_clk.enet_tx_clk */
+                MX6QDL_PAD_RGMII_RD0__RGMII_RD0 PIN_INPUT_PULLUP /* rgmii_rd0.rgmii_rd0 */
+                MX6QDL_PAD_RGMII_RD1__RGMII_RD1 PIN_INPUT_PULLUP /* rgmii_rd1.rgmii_rd1 */
+                MX6QDL_PAD_RGMII_RD2__RGMII_RD2 PIN_INPUT_PULLUP /* rgmii_rd2.rgmii_rd2 */
+                MX6QDL_PAD_RGMII_RD3__RGMII_RD3 PIN_INPUT_PULLUP /* rgmii_rd3.rgmii_rd3 */
+                MX6QDL_PAD_RGMII_RXC__RGMII_RXC PIN_INPUT_PULLUP /* rgmii_rxc.rgmii_rxc */
+                MX6QDL_PAD_RGMII_RX_CTL__RGMII_RX_CTL PIN_INPUT_PULLUP /* rgmii_rx_ctl.rgmii_rx_ctl */
+                MX6QDL_PAD_RGMII_TD0__RGMII_TD0 PIN_INPUT_PULLUP /* rgmii_td0.rgmii_td0 */
+                MX6QDL_PAD_RGMII_TD1__RGMII_TD1 PIN_INPUT_PULLUP /* rgmii_td1.rgmii_td1 */
+                MX6QDL_PAD_RGMII_TD2__RGMII_TD2 PIN_INPUT_PULLUP /* rgmii_td2.rgmii_td2 */
+                MX6QDL_PAD_RGMII_TD3__RGMII_TD3 PIN_INPUT_PULLUP /* rgmii_td3.rgmii_td3 */
+                MX6QDL_PAD_RGMII_TXC__RGMII_TXC PIN_INPUT_PULLUP /* rgmii_txc.rgmii_txc */
+                MX6QDL_PAD_RGMII_TX_CTL__RGMII_TX_CTL PIN_INPUT_PULLUP /* rgmii_tx_ctl.rgmii_tx_ctl */
+            >;
+        };
+
+        root_gpios_default: root_gpiosgrp {
+            fsl,pins = <
+                MX6QDL_PAD_DI0_PIN3__GPIO4_IO19 PIN_INPUT /* di0_pin3.gpio4_io19 */
+            >;
+        };
+
+        ecspi3_default: ecspi3grp {
+            fsl,pins = <
+                MX6QDL_PAD_DISP0_DAT0__ECSPI3_SCLK PIN_INPUT_PULLUP /* disp0_dat0.ecspi3_sclk */
+                MX6QDL_PAD_DISP0_DAT3__ECSPI3_SS0 PIN_INPUT /* disp0_dat3.ecspi3_ss0 */
+                MX6QDL_PAD_DISP0_DAT4__ECSPI3_SS1 PIN_INPUT /* disp0_dat4.ecspi3_ss1 */
+                MX6QDL_PAD_DISP0_DAT2__ECSPI3_MISO PIN_INPUT_PULLUP /* disp0_dat2.ecspi3_miso */
+                MX6QDL_PAD_DISP0_DAT1__ECSPI3_MOSI PIN_INPUT_PULLUP /* disp0_dat1.ecspi3_mosi */
+                MX6QDL_PAD_DI0_PIN3__GPIO4_IO19 PIN_INPUT /* di0_pin3.gpio4_io19 */
+            >;
+        };
+
+        leds_default: ledsgrp {
+            fsl,pins = <
+                MX6QDL_PAD_DISP0_DAT7__GPIO4_IO28 PIN_INPUT /* disp0_dat7.gpio4_io28 */
+            >;
+        };
+
+        usdhc1_default: usdhc1grp {
+            fsl,pins = <
+                MX6QDL_PAD_SD1_CLK__SD1_CLK PIN_INPUT /* sd1_clk.sd1_clk */
+                MX6QDL_PAD_SD1_CMD__SD1_CMD PIN_INPUT /* sd1_cmd.sd1_cmd */
+                MX6QDL_PAD_SD1_DAT0__SD1_DATA0 PIN_INPUT /* sd1_dat0.sd1_data0 */
+                MX6QDL_PAD_SD1_DAT1__SD1_DATA1 PIN_INPUT /* sd1_dat1.sd1_data1 */
+                MX6QDL_PAD_SD1_DAT2__SD1_DATA2 PIN_INPUT /* sd1_dat2.sd1_data2 */
+                MX6QDL_PAD_SD1_DAT3__SD1_DATA3 PIN_INPUT /* sd1_dat3.sd1_data3 */
+                MX6QDL_PAD_DISP0_DAT16__GPIO5_IO10 PIN_INPUT /* disp0_dat16.gpio5_io10 */
+                MX6QDL_PAD_DI0_PIN4__GPIO4_IO20 PIN_INPUT /* di0_pin4.gpio4_io20 */
+                MX6QDL_PAD_DI0_PIN15__GPIO4_IO17 PIN_INPUT /* di0_pin15.gpio4_io17 */
+            >;
+        };
+
+        i2c3_default: i2c3grp {
+            fsl,pins = <
+                MX6QDL_PAD_GPIO_5__I2C3_SCL PIN_OUTPUT_PULLUP /* gpio_5.i2c3_scl */
+            >;
+        };
+
+        hdmi_default: hdmigrp {
+            fsl,pins = <
+                MX6QDL_PAD_KEY_COL3__HDMI_TX_DDC_SCL PIN_INPUT /* key_col3.hdmi_tx_ddc_scl */
+                MX6QDL_PAD_KEY_ROW3__HDMI_TX_DDC_SDA PIN_INPUT /* key_row3.hdmi_tx_ddc_sda */
+            >;
+        };
+
+        uart5_default: uart5grp {
+            fsl,pins = <
+                MX6QDL_PAD_KEY_ROW4__UART5_CTS_B PIN_INPUT_PULLUP /* key_row4.uart5_cts_b */
+                MX6QDL_PAD_KEY_COL4__UART5_RTS_B PIN_INPUT_PULLUP /* key_col4.uart5_rts_b */
+                MX6QDL_PAD_KEY_ROW1__UART5_RX_DATA PIN_INPUT_PULLUP /* key_row1.uart5_rx_data */
+                MX6QDL_PAD_KEY_COL1__UART5_TX_DATA PIN_INPUT_PULLUP /* key_col1.uart5_tx_data */
+            >;
+        };
+
+        audio_default: audiogrp {
+            fsl,pins = <
+                MX6QDL_PAD_DISP0_DAT20__AUD4_TXC PIN_INPUT_PULLDOWN /* disp0_dat20.aud4_txc */
+                MX6QDL_PAD_DISP0_DAT21__AUD4_TXD PIN_INPUT_PULLDOWN /* disp0_dat21.aud4_txd */
+                MX6QDL_PAD_DISP0_DAT23__AUD4_RXD PIN_INPUT_PULLDOWN /* disp0_dat23.aud4_rxd */
+                MX6QDL_PAD_DISP0_DAT22__AUD4_TXFS PIN_INPUT_PULLDOWN /* disp0_dat22.aud4_txfs */
+            >;
+        };
+
+        uart3_default: uart3grp {
+            fsl,pins = <
+                MX6QDL_PAD_EIM_D25__UART3_RX_DATA PIN_INPUT_PULLUP /* eim_d25.uart3_rx_data */
+                MX6QDL_PAD_EIM_D24__UART3_TX_DATA PIN_INPUT_PULLUP /* eim_d24.uart3_tx_data */
+            >;
+        };
+
+        uart1_default: uart1grp {
+            fsl,pins = <
+                MX6QDL_PAD_SD3_DAT6__UART1_RX_DATA PIN_INPUT_PULLUP /* sd3_dat6.uart1_rx_data */
+                MX6QDL_PAD_SD3_DAT7__UART1_TX_DATA PIN_INPUT_PULLUP /* sd3_dat7.uart1_tx_data */
+            >;
+        };
+        
+        i2c1_default: i2c1grp {
+            fsl,pins = <
+                MX6QDL_PAD_EIM_D21__I2C1_SCL PIN_OUTPUT_PULLUP /* eim_d21.i2c1_scl */
+                MX6QDL_PAD_EIM_D28__I2C1_SDA PIN_OUTPUT_PULLUP /* eim_d28.i2c1_sda */
+                MX6QDL_PAD_DI0_DISP_CLK__GPIO4_IO16 PIN_INPUT /* di0_disp_clk.gpio4_io16 */
+            >;
+        };
+    };
+};
diff --git a/sound/soc/fsl/Kconfig b/sound/soc/fsl/Kconfig
index a4054f3..ac0a733 100644
--- a/sound/soc/fsl/Kconfig
+++ b/sound/soc/fsl/Kconfig
@@ -355,6 +355,19 @@ config SND_SOC_IMX_MC13783
 	select SND_SOC_MC13783
 	select SND_SOC_IMX_PCM_DMA
 
+config SND_SOC_IMX_TLV320AIC3X
+	tristate "SoC Audio support for i.MX6 boards with tlv320aic3x audio codec"
+	depends on OF && I2C
+	select SND_SOC_TLV320AIC3X
+	select SND_SOC_IMX_PCM_DMA
+	select SND_SOC_IMX_AUDMUX
+	select SND_SOC_FSL_SSI
+	help
+		SoC audio for i.MX6 boards with codec TLV320AIC3x attached over
+		SSI interface.
+		Say Y if you want to add support for SoC audio on phyFLEX-i.MX6
+		boards.
+
 config SND_SOC_FSL_ASOC_CARD
 	tristate "Generic ASoC Sound Card with ASRC support"
 	depends on OF && I2C
diff --git a/sound/soc/fsl/Makefile b/sound/soc/fsl/Makefile
index 207c669..e419337 100644
--- a/sound/soc/fsl/Makefile
+++ b/sound/soc/fsl/Makefile
@@ -64,6 +64,7 @@ snd-soc-imx-wm8962-objs := imx-wm8962.o
 snd-soc-imx-sii902x-objs := imx-sii902x.o
 snd-soc-imx-spdif-objs := imx-spdif.o
 snd-soc-imx-mc13783-objs := imx-mc13783.o
+snd-soc-imx-tlv320aic3x-objs := imx-tlv320aic3x.o
 snd-soc-imx-mqs-objs := imx-mqs.o
 snd-soc-imx-si476x-objs := imx-si476x.o
 snd-soc-imx-hdmi-objs := imx-hdmi.o
@@ -81,6 +82,7 @@ obj-$(CONFIG_SND_SOC_IMX_WM8962) += snd-soc-imx-wm8962.o
 obj-$(CONFIG_SND_SOC_IMX_SII902X) += snd-soc-imx-sii902x.o
 obj-$(CONFIG_SND_SOC_IMX_SPDIF) += snd-soc-imx-spdif.o
 obj-$(CONFIG_SND_SOC_IMX_MC13783) += snd-soc-imx-mc13783.o
+obj-$(CONFIG_SND_SOC_IMX_TLV320AIC3X) += snd-soc-imx-tlv320aic3x.o
 obj-$(CONFIG_SND_SOC_IMX_MQS) += snd-soc-imx-mqs.o
 obj-$(CONFIG_SND_SOC_IMX_SI476X) += snd-soc-imx-si476x.o
 obj-$(CONFIG_SND_SOC_IMX_HDMI) += snd-soc-imx-hdmi.o
diff --git a/sound/soc/fsl/imx-tlv320aic3x.c b/sound/soc/fsl/imx-tlv320aic3x.c
new file mode 100644
index 0000000..e14bcc1
--- /dev/null
+++ b/sound/soc/fsl/imx-tlv320aic3x.c
@@ -0,0 +1,186 @@
+/*
+ * Copyright 2014 Dmitry Lavnikevich,
+ * SaM Solutions <d.lavnikevich@sam-solutions.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+
+#include <linux/module.h>
+#include <linux/i2c.h>
+#include <linux/of.h>
+#include <linux/of_platform.h>
+
+#include "../codecs/tlv320aic3x.h"
+#include "imx-audmux.h"
+#include "imx-ssi.h"
+
+#define CODEC_CLOCK 12000000
+
+
+/* machine dapm widgets */
+static const struct snd_soc_dapm_widget aic3x_dapm_widgets[] = {
+	SND_SOC_DAPM_LINE("Line Out", NULL),
+	SND_SOC_DAPM_LINE("Speaker", NULL),
+	SND_SOC_DAPM_HP("Headphone Jack", NULL),
+	SND_SOC_DAPM_MIC("Mic Jack", NULL),
+	SND_SOC_DAPM_LINE("Line In", NULL),
+};
+
+static int imx_audmux_config(int int_port, int ext_port)
+{
+	unsigned int ptcr, pdcr;
+
+	int_port--;
+	ext_port--;
+	ptcr = IMX_AUDMUX_V2_PTCR_TFSDIR |
+		IMX_AUDMUX_V2_PTCR_TFSEL(ext_port) |
+		IMX_AUDMUX_V2_PTCR_TCLKDIR |
+		IMX_AUDMUX_V2_PTCR_TCSEL(ext_port);
+	pdcr = IMX_AUDMUX_V2_PDCR_RXDSEL(ext_port);
+	imx_audmux_v2_configure_port(int_port, ptcr, pdcr);
+
+	ptcr = 0;
+	pdcr = IMX_AUDMUX_V2_PDCR_RXDSEL(int_port);
+	imx_audmux_v2_configure_port(ext_port, ptcr, pdcr);
+
+	return 0;
+}
+
+/* Logic for a aic3x as connected on a imx */
+static int imx_aic3x_init(struct snd_soc_pcm_runtime *rtd)
+{
+//	struct device_node *np = rtd->dev.of_node;
+	int ret;
+	int clock = CODEC_CLOCK; // fix later
+//	struct device *dv = rtd->dev;
+//	struct device dv2 = *dv;
+	//ret = of_property_read_u32(dv2.of_node, "clock-frequency", &clock);
+	//printk("rtd device ... ret=%d, clock=%d\n", rtd->dev, clock);
+//	printk("rtd_dev = %d, rtd_dev_ = %d\n", (int)dv, (int)(&dv2));
+	ret = snd_soc_dai_set_sysclk(rtd->codec_dai, 0, clock,
+		SND_SOC_CLOCK_IN);
+	if (ret < 0)
+		return ret;
+
+	return 0;
+}
+
+static struct snd_soc_dai_link imx_tlv320_dai = {
+	.name = "HiFi",
+	.stream_name = "HiFi",
+	.codec_dai_name = "tlv320aic3x-hifi",
+	.init = &imx_aic3x_init,
+	.dai_fmt = SND_SOC_DAIFMT_I2S |
+		SND_SOC_DAIFMT_NB_NF |
+		SND_SOC_DAIFMT_CBM_CFM,
+};
+
+static struct snd_soc_card imx_tlv320_card = {
+	.num_links = 1,
+	.owner = THIS_MODULE,
+	.dai_link = &imx_tlv320_dai,
+	.dapm_widgets = aic3x_dapm_widgets,
+	.num_dapm_widgets = ARRAY_SIZE(aic3x_dapm_widgets),
+};
+
+static int imx_tlv320_probe(struct platform_device *pdev)
+{
+	struct device_node *np = pdev->dev.of_node;
+	struct device_node *ssi_np, *codec_np;
+	struct platform_device *ssi_pdev;
+	struct i2c_client *codec_dev;
+	int int_port, ext_port;
+	int ret = 0;
+
+	//printk("TLV driver, tlv, snd, test\n");
+
+	//printk("test = %d\n", (int)(&(pdev->dev)));
+	ret = of_property_read_u32(np, "mux-int-port", &int_port);
+	if (ret) {
+		dev_err(&pdev->dev, "mux-int-port missing or invalid\n");
+		return ret;
+	}
+	ret = of_property_read_u32(np, "mux-ext-port", &ext_port);
+	if (ret) {
+		dev_err(&pdev->dev, "mux-ext-port missing or invalid\n");
+		return ret;
+	}
+
+	imx_audmux_config(int_port, ext_port);
+
+	ssi_np = of_parse_phandle(pdev->dev.of_node, "ssi-controller", 0);
+	codec_np = of_parse_phandle(pdev->dev.of_node, "audio-codec", 0);
+	if (!ssi_np || !codec_np) {
+		dev_err(&pdev->dev, "phandle missing or invalid\n");
+		ret = -EINVAL;
+		goto fail;
+	}
+
+	ssi_pdev = of_find_device_by_node(ssi_np);
+	if (!ssi_pdev) {
+		dev_err(&pdev->dev, "failed to find SSI platform device\n");
+		ret = -EPROBE_DEFER;
+		goto fail;
+	}
+	codec_dev = of_find_i2c_device_by_node(codec_np);
+	if (!codec_dev) {
+		dev_err(&pdev->dev, "failed to find codec platform device\n");
+		return -EPROBE_DEFER;
+	}
+
+	imx_tlv320_dai.codec_of_node = codec_np;
+	imx_tlv320_dai.cpu_of_node = ssi_np;
+	imx_tlv320_dai.platform_of_node = ssi_np;
+
+	imx_tlv320_card.dev = &pdev->dev;
+	ret = snd_soc_of_parse_card_name(&imx_tlv320_card, "model");
+	if (ret)
+		goto fail;
+	ret = snd_soc_of_parse_audio_routing(&imx_tlv320_card, "audio-routing");
+	if (ret)
+		goto fail;
+
+	platform_set_drvdata(pdev, &imx_tlv320_card);
+
+	ret = devm_snd_soc_register_card(&pdev->dev, &imx_tlv320_card);
+	if (ret) {
+		dev_err(&pdev->dev, "snd_soc_register_card failed (%d)\n", ret);
+		goto fail;
+	}
+
+	of_node_put(ssi_np);
+	of_node_put(codec_np);
+
+	return 0;
+
+fail:
+	if (ssi_np)
+		of_node_put(ssi_np);
+	if (codec_np)
+		of_node_put(codec_np);
+
+	return ret;
+}
+
+static const struct of_device_id imx_tlv320_dt_ids[] = {
+	{ .compatible = "fsl,imx-audio-tlv320aic3x", },
+	{ /* sentinel */ }
+};
+MODULE_DEVICE_TABLE(of, imx_tlv320_dt_ids);
+
+static struct platform_driver imx_tlv320_driver = {
+	.driver = {
+		.name = "tlv320aic3x",
+		.owner = THIS_MODULE,
+		.pm = &snd_soc_pm_ops,
+		.of_match_table = imx_tlv320_dt_ids,
+	},
+	.probe = imx_tlv320_probe,
+};
+module_platform_driver(imx_tlv320_driver);
+
+MODULE_AUTHOR("Lavnikevich Dmitry");
+MODULE_DESCRIPTION("TLV320AIC3X i.MX6 ASoC driver");
+MODULE_LICENSE("GPL");
-- 
2.7.4

